class Solution {
    public int singleNonDuplicate(int[] nums) {
        int n = nums.length;
        int start = 0;
        int end = n - 1;

        while(start < end) {
            int mid = start + (end - start) / 2;
            //Checking if mid is even or not 
            boolean isEven = (mid % 2 == 0);

            if(nums[mid] == nums[mid-1]) {
                //If the previous element was also same as mid then 
                if(isEven) {
                    end = mid - 2;
                }
                else {
                    start = mid + 1;
                }
            }
            else if (nums[mid] == nums[mid+1]) {
                if(isEven) {
                    start = mid + 2;
                }
                else{
                    end = mid - 1;
                }
            }
            else{
                return nums[mid];
            }
        }
        return nums[start];
    
    }
}



