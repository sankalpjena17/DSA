
//LeetCode
class Solution {
    public void nextPermutation(int[] nums) {
        int ind1=-1;
        //Example
        //   3
        //  / \
        // 1   2

        //find the index of the first number that is lesser than it's next
        for(int i=nums.length-1;i>=1;i--){
            if(nums[i-1]<nums[i]){
                ind1=i-1;       //nums[ind1]=1
                break;
            }
        }
        int ind2=-1;
        //if such a number exists, for a lexicographical order, find the number immediately bigger than it
        if(ind1!=-1){
            for(int i=nums.length-1;i>=ind1;i--){
                if(nums[i]>nums[ind1]){
                    ind2=i;     //nums[ind2]=2
                    break;
                }
            }
            //perform a swap of the two numbers
            int temp=nums[ind1];
            nums[ind1]=nums[ind2];
            nums[ind2]=temp;

        //      3
        //     / \
        //    2   1
        }
        //reverse the order after the break point(ind1) to ensure the lexicographical order
        for(int i=ind1+1,j=nums.length-1;i<j;i++,j--){
            int t=nums[i];
            nums[i]=nums[j];
            nums[j]=t;
        }
        // 2   3
        //  \ /
        //   1
    }
}
