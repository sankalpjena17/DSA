

//Approach:-
//Problem is very simple first store the root then store the left value and 
//Then the right value


public class Solution {
    public int[] preorderTraversal(TreeNode A) {
        ArrayList<Integer> ans = new ArrayList<>();
        //calling the preorder function 
        PreOrder(A , ans);
        //storing in array 
        int [] res = new int[ans.size()];
        for(int i = 0 ; i < ans.size() ; i++){
            res[i] = ans.get(i);
        }
        return res;
    }
    public void PreOrder(TreeNode A , ArrayList<Integer> ans){
        if(A == null){
            //if nothing is there than just return 
            return;
        }
        //Preorder = Data -> Left -> Right 
        //add the value first
        ans.add(A.val);
        //traverse left 
        PreOrder(A.left , ans);
        //traverse right
        PreOrder(A.right , ans);
    }
    
}
