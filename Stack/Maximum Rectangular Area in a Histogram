//Geekforgeeks
class Solution
{
    //Function to find largest rectangular area possible in a given histogram.
    public static long getMaxArea(long hist[], long n) 
    {
        // your code here
        Stack<Integer> st = new Stack<>();
        long [] NSEL = new long[(int)n];
        long [] NSER = new long [(int)n];
        
        for(int i = 0 ; i < (int)n ; i++){
            while(st.size() > 0 && hist[i] <= hist[st.peek()]){
                st.pop();
            }
            NSEL[i] = st.isEmpty() ? -1 : st.peek();
            st.push(i);
        }
        while(st.size() > 0){
            st.pop();
        }
        for(int i = (int)(n-1) ; i >= 0 ; i--){
            while(st.size() > 0 && hist[i] <= hist[st.peek()]){
                st.pop();
            }
            NSER[i] = st.isEmpty() ? (int) n : st.peek();
            st.push(i);
        }
        long maxArea = 0;
        for(int i = 0 ; i < n ; i++){
            maxArea = Math.max(maxArea , hist[i] * (NSER[i] - NSEL[i] - 1));
        }
        return maxArea;
    }
        
}



