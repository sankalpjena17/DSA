
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        // Initialize two pointers p1 and p2 to the head of the two lists
    ListNode p1 = headA;
    ListNode p2 = headB;
    // Loop until both pointers are equal or reach the end of their list
    while (p1 != p2) {
        // Move p1 to the next node
        if(p1 == null) p1 = headB;
        else p1 = p1.next;
        
        // Move p2 to the next node
       if(p2 == null) p2 = headA;
       else p2 = p2.next;
    }
    // Return the intersection node or null if there is no intersection
    return p1;
    }
}
