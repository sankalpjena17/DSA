//Geeksforgeeks
class Solution
{
    public int LongestRepeatingSubsequence(String str)
    {
        // code here
        String str2 = str;
        int n = str.length();
        int m = str2.length();
        
        int t [][] = new int [n+1][m+1];
        //Initialize
        for(int i = 0 ; i < n + 1 ; i++){
            for(int j = 0 ; j < m + 1 ; j++){
                if(i == 0 || j == 0){
                    t[i][j] = 0;
                }
            }
        }
        
        //Top down code choice diagram 
        for (int i = 1 ; i < n + 1 ; i++){
            for (int j = 1 ; j < m + 1 ; j++){
                if(str.charAt(i-1) == str2.charAt(j - 1) && i != j ){
                   t[i][j] = t[i-1][j-1] + 1;
                }
                else {
                    t[i][j] = Math.max(t[i-1][j] , t[i][j-1]);
                }
            }
        }
        return t[n][m];
    }
}
